name: Prepare Release
on:
  workflow_dispatch:
    inputs:
      network:
        required: true
        description: 'Release network environment'
        default: 'internal'
      rc-number:
        required: true
        description: 'Rc number (e.g. 100310)'
      deploy-number:
        required: true
        description: 'Deploy number (e.g. 1)'
      launcher-commit:
        description: 'Specific launcher commit'
      player-commit:
        description: 'Specific player commit'

concurrency:
  group: prepare-release

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    environment:
      name: ${{ github.event.inputs.network }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2.2.2
      - uses: actions/setup-dotnet@v2
        with:
          python-version: 3.9
          dotnet-version: "6.0.x"
      - run: dotnet tool install -g Libplanet.Tools
      - run: |
          echo ${{ github.event.inputs.network }}
          python -m pip install -r requirements-dev.txt
          flit install
        working-directory: py-scripts
        name: install dependencies
      - run: planet key import --passphrase ${{ secrets.KEY_PASSPHRASE }} ${{ secrets.KEY_PRIVATE }}
      - run: |
          python cli.py prepare release ${{ github.event.inputs.network }} ${{ github.event.inputs.rc-number }} ${{ github.event.inputs.deploy-number }} --launcher-commit "${{ github.event.inputs.launcher-commit }}" --player-commit "${{ github.event.inputs.player-commit }}" --slack-channel "${{ secrets.SLACK_CHANNEL }}"
      - run: |
          python cli.py check headless-image ${{ github.event.inputs.network }} ${{ github.event.inputs.rc-number }}-${{ github.event.inputs.deploy-number }}
          name: check headless image exists
        env:
          ENV: production
          GITHUB_TOKEN: ${{ secrets.P_GITHUB_TOKEN }}
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          KEY_PASSPHRASE: ${{ secrets.KEY_PASSPHRASE }}
          KEY_ADDRESS: ${{ secrets.KEY_ADDRESS }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        working-directory: py-scripts
