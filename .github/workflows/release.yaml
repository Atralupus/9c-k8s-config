name: Release
on:
  pull_request:
    branches: 
      - main
      - ci-test
    types: [closed]

concurrency:
  group: release

jobs:
  extract-network:
    if: ${{ github.event.pull_request.merged }}
    runs-on: ubuntu-latest
    outputs:
      network: ${{ steps.extract.outputs.network }}
    steps:
      - uses: actions/checkout@v3
      - name: extract
        id: extract
        run: |
          echo ${{ github.head_ref }}
          if [[ ${{ github.head_ref }} =~ ^update-internal-manifests ]]; then
              echo "::set-output name=network::internal"
          elif [[ ${{ github.head_ref }} =~ ^update-main-manifests ]]; then
              echo "::set-output name=network::main"
          else
            echo "::set-output name=network::null"
          fi

  release:
    if: needs.extract-network.outputs.network != null
    runs-on: ubuntu-latest
    needs: extract-network
    environment:
      name: ${{ needs.extract-network.outputs.network }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v2.2.2
      - uses: actions/setup-dotnet@v2
        with:
          python-version: 3.9
          dotnet-version: "6.0.x"
      - run: dotnet tool install -g Libplanet.Tools

      - name: release
        run: |
          if [[ ${{ needs.extract-network.outputs.network }} == "internal" ]]; then
            echo "internal"
          elif [[ ${{ needs.extract-network.outputs.network }} == "main" ]]; then
            echo "main"
          fi
        env:
          ENV: production
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          KEY_PASSPHRASE: ${{ secrets.KEY_PASSPHRASE }}
          KEY_ADDRESS: ${{ secrets.KEY_ADDRESS }}
          GITHUB_TOKEN: ${{ secrets.P_GITHUB_TOKEN }}
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          SLACK_ORG_TOKEN: ${{ secrets.SLACK_ORG_TOKEN }}
